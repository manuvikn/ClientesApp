package com.manuvikn.ProyectoSpringBoot.service;

import com.manuvikn.ProyectoSpringBoot.dao.UsuarioRepository;
import com.manuvikn.ProyectoSpringBoot.entity.Rol;
import com.manuvikn.ProyectoSpringBoot.entity.Usuario;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.core.GrantedAuthority;
import org.springframework.security.core.authority.SimpleGrantedAuthority;
import org.springframework.security.core.userdetails.User;
import org.springframework.security.core.userdetails.UserDetails;
import org.springframework.security.core.userdetails.UserDetailsService;
import org.springframework.security.core.userdetails.UsernameNotFoundException;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import java.util.List;
import java.util.stream.Collectors;

@Service
public class UsuarioService implements UserDetailsService {

    private final Logger LOG = LoggerFactory.getLogger(UsuarioService.class);

    @Autowired
    private UsuarioRepository usuarioRepository;

    @Override
    @Transactional(readOnly = true)
    public UserDetails loadUserByUsername(String username) throws UsernameNotFoundException {

        Usuario usuario = usuarioRepository.getUserByUsername(username);

        if (usuario == null) LOG.error("Error en el login: El usuario " + username + " no existe en el sistema");

        List<GrantedAuthority> authorities = usuario.getRoles().stream()
                .map(Rol::getNombre)
                .peek(LOG::info)
                .map(SimpleGrantedAuthority::new)
                .collect(Collectors.toList());

        return new User(username, usuario.getPassword(), usuario.getEnabled(), true, true, true, authorities);
    }
}
